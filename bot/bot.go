package bot

import (
	"log"

	"telegram-bot/database"
	"telegram-bot/handlers"

	"github.com/mymmrac/telego"
	th "github.com/mymmrac/telego/telegohandler"
)

type Bot struct {
	bot        *telego.Bot
	db         *database.Database
	botHandler *th.BotHandler
	channelID  int64
	ownerID    int64
}

func NewBot(token string, channelID, ownerID int64) (*Bot, error) {
	bot, err := telego.NewBot(token)
	if err != nil {
		return nil, err
	}

	db, err := database.NewDatabase()
	if err != nil {
		return nil, err
	}

	botInstance := &Bot{
		bot:       bot,
		db:        db,
		channelID: channelID,
		ownerID:   ownerID,
	}

	botInstance.initializeOwner()

	return botInstance, nil
}

func (b *Bot) initializeOwner() {
	if !b.db.IsAdmin(b.ownerID) {
		err := b.db.AddAdmin(b.ownerID, "vstor08")
		if err != nil {
			log.Printf("–ü—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏–µ: –Ω–µ —É–¥–∞–ª–æ—Å—å –¥–æ–±–∞–≤–∏—Ç—å –≤–ª–∞–¥–µ–ª—å—Ü–∞: %v", err)
		} else {
			log.Printf("‚úÖ –í–ª–∞–¥–µ–ª–µ—Ü %d –¥–æ–±–∞–≤–ª–µ–Ω –∫–∞–∫ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä", b.ownerID)
		}
	}
}

func (b *Bot) Start() {
	updates, err := b.bot.UpdatesViaLongPolling(nil)
	if err != nil {
		log.Printf("–û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è –æ–±–Ω–æ–≤–ª–µ–Ω–∏–π: %v", err)
		return
	}

	botHandler, err := th.NewBotHandler(b.bot, updates)
	if err != nil {
		log.Printf("–û—à–∏–±–∫–∞ —Å–æ–∑–¥–∞–Ω–∏—è –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∞: %v", err)
		return
	}

	b.registerHandlers(botHandler)
	b.botHandler = botHandler

	go botHandler.Start()

	log.Println("ü§ñ –ë–æ—Ç-–ø—Ä–µ–¥–ª–æ–∂–∫–∞ –∑–∞–ø—É—â–µ–Ω! –ü—Ä–∏–Ω–∏–º–∞–µ—Ç –∞–Ω–æ–Ω–∏–º–Ω—ã–µ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏—è –≤ –õ–°")
}

func (b *Bot) Stop() {
	if b.botHandler != nil {
		b.botHandler.Stop()
	}
	b.bot.StopLongPolling()
	log.Println("–ë–æ—Ç –æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω")
}

func (b *Bot) registerHandlers(bh *th.BotHandler) {

	mediaHandler := handlers.NewMediaHandler(b.db)
	proposalsHandler := handlers.NewProposalsHandler(b.db, mediaHandler, b.channelID, b.ownerID)
	moderationHandler := handlers.NewModerationHandler(b.db, mediaHandler, b.channelID, b.ownerID)
	adminHandler := handlers.NewAdminHandler(b.db, b.ownerID)

	bh.Handle(proposalsHandler.HandleStartCommand, th.CommandEqual("start"))
	bh.Handle(moderationHandler.HandleProposalsCommand, th.CommandEqual("proposals"))
	bh.Handle(adminHandler.HandleAddAdminCommand, th.CommandEqual("addadmin"))
	bh.Handle(adminHandler.HandleListAdminsCommand, th.CommandEqual("admins"))

	bh.Handle(moderationHandler.HandleCallback, th.AnyCallbackQuery())

	bh.Handle(proposalsHandler.HandleUserProposal, th.AnyMessage())
}

// people, please don't post weird/innapropiote stuff, some people are just trying to ‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚£†‚£§‚£§‚£§‚£§‚£§‚£Ñ‚°Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä
// ‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚¢∞‚°ø‚†ã‚†Å‚†Ä‚†Ä‚†à‚†â‚†ô‚†ª‚£∑‚£Ñ‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä
// ‚†Ä‚†Ä‚†Ä‚†Ä‚¢Ä‚£ø‚†á‚†Ä‚¢Ä‚£¥‚£∂‚°æ‚†ø‚†ø‚†ø‚¢ø‚£ø‚£¶‚°Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä
// ‚†Ä‚†Ä‚£Ä‚£Ä‚£∏‚°ø‚†Ä‚†Ä‚¢∏‚£ø‚£á‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†ô‚£∑‚°Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä
// ‚†Ä‚£æ‚°ü‚†õ‚£ø‚°á‚†Ä‚†Ä‚¢∏‚£ø‚£ø‚£∑‚£§‚£§‚£§‚£§‚£∂‚£∂‚£ø‚†á‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚£Ä‚†Ä‚†Ä
// ‚¢Ä‚£ø‚†Ä‚¢Ä‚£ø‚°á‚†Ä‚†Ä‚†Ä‚†ª‚¢ø‚£ø‚£ø‚£ø‚£ø‚£ø‚†ø‚£ø‚°è‚†Ä‚†Ä‚†Ä‚†Ä‚¢¥‚£∂‚£∂‚£ø‚£ø‚£ø‚£Ü
// ‚¢∏‚£ø‚†Ä‚¢∏‚£ø‚°á‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†à‚†â‚†Å‚†Ä‚†Ä‚†Ä‚£ø‚°á‚£Ä‚£†‚£¥‚£æ‚£Æ‚£ù‚†ø‚†ø‚†ø‚£ª‚°ü
// ‚¢∏‚£ø‚†Ä‚†ò‚£ø‚°á‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚£†‚£∂‚£æ‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚°ø‚†Å‚†â‚†Ä
// ‚†∏‚£ø‚†Ä‚†Ä‚£ø‚°á‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚£†‚£æ‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚°ø‚†ü‚†â‚†Ä‚†Ä‚†Ä‚†Ä
// ‚†Ä‚†ª‚£∑‚£∂‚£ø‚£á‚†Ä‚†Ä‚†Ä‚¢†‚£º‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£õ‚£õ‚£ª‚†â‚†Å‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä
// ‚†Ä‚†Ä‚†Ä‚†Ä‚¢∏‚£ø‚†Ä‚†Ä‚†Ä‚¢∏‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚°á‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä
// ‚†Ä‚†Ä‚†Ä‚†Ä‚¢∏‚£ø‚£Ä‚£Ä‚£Ä‚£º‚°ø‚¢ø‚£ø‚£ø‚£ø‚£ø‚£ø‚°ø‚£ø‚£ø‚°ø‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä
// ‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†ô‚†õ‚†õ‚†õ‚†ã‚†Å‚†Ä‚†ô‚†ª‚†ø‚†ü‚†ã‚†ë‚†õ‚†ã‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Äspread this message to help! ‚ô°
